<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Twilio Incoming Call Flow Generator</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
    <script>

      


      $(function(){

      
        let rootUrl = "/Main?"
      var loadSavedData = function(data){
        if(data){
          if(data.greetingSay){
            $("#GreetingSay").val(data.greetingSay);
          }else{
            $("#GreetingSay").val('');
          }

          if(data.greetingPlay){
            $("#GreetingPlay").val(data.greetingPlay);
          }else{
            $("#GreetingPlay").val('');
          }

          if(data.huntSay){
            $("#HuntSay").val(data.huntSay);
          }else{
            $("#HuntSay").val('');
          }

          if(data.huntPlay){
            $("#HuntPlay").val(data.huntPlay);
          }else{
            $("#HuntPlay").val('');
          }


          if (data.dial && data.dial.dial1){
            setDialData(1,data.dial.dial1);
          }
          if (data.dial && data.dial.dial2){
            setDialData(2,data.dial.dial2);
          }
          if (data.dial && data.dial.dial3){
            setDialData(3,data.dial.dial3);
          }
          if (data.dial && data.dial.dial4){
            setDialData(4,data.dial.dial4);
          }
          if (data.voicemail){
            setVoicemailSettings(data.voicemail);
          }
          $("#resultJson").text(JSON.stringify(data, null, 2));
        }
      }

     

      var saveJsonData = function(){
        var jsonData = {};
        jsonData.greetingSay = $("#GreetingSay").val();
        jsonData.greetingPlay = $("#GreetingPlay").val();
        jsonData.huntSay = $("#HuntSay").val();
        jsonData.huntPlay = $("#HuntPlay").val();
        jsonData.dial = {
          dial1 : getDialData(1),
          dial2 : getDialData(2),
          dial3 : getDialData(3),
          dial4 : getDialData(4)
        };
        jsonData.voicemail = getVoicemailSettings();
        $("#resultJson").text(JSON.stringify(jsonData, null, 2));
        sessionStorage.setItem('TwilioData', JSON.stringify(jsonData));
      }
       
      var getVoicemailSettings = function(){
        let $Voicemail = $(".Voicemail");
        var voicemailData = {};
        if( $Voicemail.find("#Enable").prop('checked')){
          voicemailData.enabled = true;
        }else{
          voicemailData.enabled = false;
        }
        
        voicemailData.say = $Voicemail.find("#Say").val();
        voicemailData.play = $Voicemail.find("#Play").val();

        if( $Voicemail.find("#PlayBeep").prop('checked')){
          voicemailData.playBeep = true;
        }else{
          voicemailData.playBeep = false;
        }
        if( $Voicemail.find("#Transcribe").prop('checked')){
          voicemailData.transcribe = true;
        }else{
          voicemailData.transcribe = false;
        }

        if( $Voicemail.find("#SmsNotify").prop('checked')){
          voicemailData.smsNotify = true;
        }else{
          voicemailData.smsNotify = false;
        }
        voicemailData.smsNotifyNumbers = $Voicemail.find("#SmsNotifyNumbers").val();

        if( $Voicemail.find("#EmailNotify").prop('checked')){
          voicemailData.emailNotify = true;
        }else{
          voicemailData.emailNotify = false;
        }
        voicemailData.emailNotifyAddresses = $Voicemail.find("#EmailNotifyAddresses").val();

        return voicemailData;
      }

      var setVoicemailSettings = function(voicemailData){
        let $Voicemail = $(".Voicemail");
        
        if(voicemailData.enabled){
          $Voicemail.find("#Enable").prop('checked', true);
        }else{
          $Voicemail.find("#Enable").prop('checked', false);
        }
        
        
        if(voicemailData.say){
           $Voicemail.find("#Say").val(voicemailData.say);
        }else{
          $Voicemail.find("#Say").val("");
        }


        if(voicemailData.play){
          $Voicemail.find("#Play").val(voicemailData.play);
        }else{
          $Voicemail.find("#Play").val("");
        }

        if(voicemailData.playBeep){
          $Voicemail.find("#PlayBeep").prop('checked', true);
        }else{
          $Voicemail.find("#PlayBeep").prop('checked', false);
        }

        if(voicemailData.transcribe ){
          $Voicemail.find("#Transcribe").prop('checked',voicemailData.transcribe);
        }else{
          $Voicemail.find("#Transcribe").prop('checked',false);
        }

        if(voicemailData.smsNotify ){
          $Voicemail.find("#SmsNotify").prop('checked',voicemailData.smsNotify);
        }else{
          $Voicemail.find("#SmsNotify").prop('checked',false);
        }
        
        if(voicemailData.smsNotifyNumbers){
          $Voicemail.find("#SmsNotifyNumbers").val(voicemailData.smsNotifyNumbers);
        }else{
          $Voicemail.find("#SmsNotifyNumbers").val();
        }

        if(voicemailData.emailNotify ){
          $Voicemail.find("#EmailNotify").prop('checked',voicemailData.emailNotify);
        }else{
          $Voicemail.find("#EmailNotify").prop('checked',false)
        }
        if (voicemailData.emailNotifyAddresses){
          $Voicemail.find("#EmailNotifyAddresses").val(voicemailData.emailNotifyAddresses);
        } else{
          $Voicemail.find("#EmailNotifyAddresses").val("");
        }

        return voicemailData;
      }

      var getDialData = function(num){
        let $Dial = $(".Dial" + num);
        var dialData = null;
        if ($Dial.find("#Numbers").val()){
            dialData = {};
            dialData.numbers = $Dial.find("#Numbers").val();
            if($Dial.find("#Simulring").prop('checked')){
              dialData.simulring = true;
            }else{
              dialData.simulring = false;
            }
            
            if($Dial.find("#Record").prop('checked')){
              dialData.record = true;
            }else{
              dialData.record = false;
            }
            if($Dial.find("#RecordTextNotify").prop('checked')){
              dialData.recordTextNotify = true;
            }else{
              dialData.recordTextNotify = false;
            }
            if($Dial.find("#CallerIDUseCalled").prop('checked')){
              dialData.callerIdUseCalled = true;
            }else{
              dialData.callerIdUseCalled = false;
            }
            if($Dial.find("#Transcibe").prop('checked')){
              dialData.transcibe = true;
            }else{
              dialData.transcibe = false;
            }
        }
        return dialData;
      }

      var setDialData = function(num, dialData){
        let $Dial = $(".Dial" + num);
        if(dialData.numbers){
          $Dial.find("#Numbers").val(dialData.numbers);
        }else{
          $Dial.find("#Numbers").val("");
        }
        if(dialData.simulring){
          $Dial.find("#Simulring").prop('checked',"checked");
        }else{
          $Dial.find("#Simulring").prop('checked',"");
        }
        if(dialData.record){
          $Dial.find("#Record").prop('checked',"checked");
        }else{
          $Dial.find("#Record").prop('checked',"");
        }
        if(dialData.recordSmsNotify){
          $Dial.find("#RecordSmsNotify").prop('checked',"checked");
        }else{
          $Dial.find("#RecordSmsNotify").prop('checked',"");
        }
        if(dialData.callerIdOverride){
          $Dial.find("#CallerIdOverride").prop('checked',"checked");
        }else{
          $Dial.find("#CallerIdOverride").prop('checked',"");
        }
        if(dialData.transcibe){
          $Dial.find("#Transcibe").prop('checked',"checked");
        }else{
          $Dial.find("#Transcibe").prop('checked',"");
        }
        if(dialData.transcibeSmsNotify){
          $Dial.find("#TranscribeSmsNotify").prop('checked',"checked");
        }else{
          $Dial.find("#TranscribeSmsNotify").prop('checked',"");
        }
      }

      var init = function(){
        //inject 4 Dial Templates
        var $DialTemplate = $("#templates").find(".Dial");
        var $DialContainer = $(".DialContainer");
        for(let i=1; i <= 4; i++){
          var $Dial = $DialTemplate.clone();
          $Dial.removeClass("Dial").addClass("Dial" + i);
          $DialContainer.append($Dial);
        }

        let savedData = sessionStorage.getItem('TwilioData');
        if(savedData){
          parsedData = JSON.parse(savedData);
          loadSavedData(parsedData);
          
        }
        $("#btnSave").on("click", saveJsonData)
      }
      init();
      })
    </script>
  </head>
  <body>
      <div class="container">
        
        <div class="mb-3">
          <label for="GreetingSay" class="form-label">Greeting Say</label>
          <input type="text" class="form-control" id="GreetingSay" placeholder="Thank you for Calling. Please wait while we locate an Agent. Call may be Recorded for Training Purposes." value="">
        </div>
        <div class="mb-3">
          <label for="GreetingPlay" class="form-label">Greeting Play</label>
          <input type="text" class="form-control" id="GreetingPlay" placeholder="http://example.com/sample.mp3">
        </div>

        <div class="mb-3">
          <label for="HuntSay" class="form-label">Hunt Say</label>
          <input type="text" class="form-control" id="HuntSay" placeholder="Please wait while we locate an Agent." value="">
        </div>
        <div class="mb-3">
          <label for="HuntPlay" class="form-label">Hunt Play</label>
          <input type="text" class="form-control" id="HuntPlay" placeholder="http://example.com/sample.mp3">
        </div>
        
        <div class="mb-3">
          <label class="form-label">Numbers to Call (numbers can be +15555551212 or sip:+15555551212@example.com seperated by commas but of same type)</label>
          <div class="DialContainer">
          </div>
        </div>
        
        <div class="mb-3">
          <div class="Voicemail">
            <div class="card">
              <div class="card-body">
                <label class="form-label">Voicemail</label>
                <div class="form-check">
                  <input class="form-check-input" type="checkbox" value="" id="Enable">
                  <label class="form-check-label" for="Enable">
                    Enable Voicemail if No Answer
                  </label>
                </div>
                <div class="mb-3">
                  <label for="Say" class="form-label">Say</label>
                  <input type="text" class="form-control" id="Say" placeholder="Please Leave a Message." value="">
                </div>
                <div class="mb-3">
                  <label for="Play" class="form-label">Play</label>
                  <input type="text" class="form-control" id="Play" placeholder="http://example.com/sample.mp3">
                </div>
                <div class="form-check">
                  <input class="form-check-input" type="checkbox" value="" id="PlayBeep">
                  <label class="form-check-label" for="PlayBeep">
                    Voicemail PlayBeep
                  </label>
                </div>
                <div class="form-check">
                  <input class="form-check-input" type="checkbox" value="" id="Transcribe">
                  <label class="form-check-label" for="Transcribe">
                    Voicemail Transcribe
                  </label>
                </div>
                <div class="form-check">
                  <input class="form-check-input" type="checkbox" value="" id="SmsNotify">
                  <label class="form-check-label" for="SmsNotify">
                    Voicemail Send SMS
                  </label>
                </div>
                <div class="mb-3">
                  <label for="SmsNotifyNumbers" class="form-label">SMS Notify Numbers</label>
                  <input type="text" class="form-control" id="SmsNotifyNumbers" placeholder="+15555551212">
                </div>
                <div class="form-check">
                  <input class="form-check-input" type="checkbox" value="" id="EmailNotify">
                  <label class="form-check-label" for="EmailNotify">Voicemail Send Email</label>
                </div>
                <div class="mb-3">
                  <label for="EmailNotifyAddresses" class="form-label">Email Address</label>
                  <input type="text" class="form-control" id="EmailNotifyAddresses" placeholder="john@example.com, joe@example.com">
                </div>
              </div>
            </div>
          </div>
        </div>  
        <div class="mb-3">
          <button class="btn btn-primary" id="btnSave">Save</button>
        </div>

        <div class="mb-3">
          <div>
            <textarea readonly="readonly" id="resultJson" class="form-control" style="min-width: 100%; min-height: 300px;"></textarea>
          </div>
        </div>
      </div>
      

      <div class="hidden" id="templates" style="display:none" >
        <div class="Dial">
          <div class="card">
            <div class="card-body">
              <label for="Numbers" class="form-label">Numbers</label>
              <input type="text" class="form-control" id="Numbers" placeholder="+15555551212">
              <div class="input-group">
                <div class="form-check ms-2">
                  <input class="form-check-input" type="checkbox" value="" id="Simulring">
                  <label class="form-check-label" for="Simulring">
                    Simulring (must be same call type)
                  </label>
                </div>
                <div class="form-check ms-2">
                  <input class="form-check-input" type="checkbox" value="" id="Record">
                  <label class="form-check-label" for="Record">
                    Record Call
                  </label>
                </div>
                <div class="form-check ms-2">
                  <input class="form-check-input" type="checkbox" value="" id="RecordSmsNotify">
                  <label class="form-check-label" for="RecordSmsNotify">
                    Record Send SMS 
                  </label>
                </div>
                <div class="form-check ms-2">
                  <input class="form-check-input" type="checkbox" value="" id="CallerIdOverride">
                  <label class="form-check-label" for="CallerIdOverride">
                     Caller ID Override
                  </label>
                </div>
                <div class="form-check ms-2">
                  <input class="form-check-input" type="checkbox" value="" id="Transcibe">
                  <label class="form-check-label" for="Transcribe">
                    Transcribe
                  </label>
                </div>
                <div class="form-check ms-2">
                  <input class="form-check-input" type="checkbox" value="" id="TranscibeSmsNotify">
                  <label class="form-check-label" for="TranscribeSmsNotify">
                    Transcribe Send SMS
                  </label>
                </div>
              </div>
            </div>
          </div>
        </div>
        
      </div>

      
  </body>
</html>
